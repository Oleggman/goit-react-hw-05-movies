{"version":3,"file":"static/js/31.ae55b5ff.chunk.js","mappings":"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","sources":["components/TrendingMovies/TrendingItem/TrendingItem.jsx","components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.jsx","components/MovieInput/MovieInput.jsx","pages/MoviesPage.js","services/movies-api.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport placeholder from 'images/placeholder.png';\n\nexport const TrendingItem = ({ movie }) => {\n  const location = useLocation();\n\n  const calcNextUrl = () =>\n    location.pathname.includes('movies') ? `${movie.id}` : `movies/${movie.id}`;\n\n  return (\n    <Link to={calcNextUrl()} state={{from: location}} >\n      <img \n        src={movie.poster_path\n          ?`https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n          : placeholder}\n        width={300}\n        alt=\"movie.original_title\" />\n      <h3>{movie.original_title}</h3>\n    </Link>\n  );\n}","import styled from 'styled-components';\n\nexport const MoviesUl = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  flex-wrap: wrap;\n`;","import { TrendingItem } from \"./TrendingItem/TrendingItem\";\nimport { MoviesUl } from \"./TrendingMovies.styled\";\n\nexport const TrendingMovies = ({movies}) => {\n  return (\n    <MoviesUl>\n      {movies.map(item =>\n        <li key={item.id}><TrendingItem movie={item} /></li>\n      )}\n    </MoviesUl>\n  );\n}","import { useSearchParams } from \"react-router-dom\";\n\nexport const MovieInput = () => {\n  const [, setParams] = useSearchParams();\n\n  const submitForm = evt => {\n    evt.preventDefault();\n    const query = evt.target.elements.movie.value;\n    const nextParams = query ? { query } : {};\n    setParams(nextParams);\n  }\n\n  return (\n    <form onSubmit={submitForm}>\n      <input name=\"movie\" placeholder=\"Enter movie name\" />\n\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}","import { MovieInput } from \"components/MovieInput/MovieInput\";\nimport { TrendingMovies } from \"components/TrendingMovies/TrendingMovies\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchMovie } from \"services/movies-api\";\n\nconst MoviesPage = () => {\n  const [movies, setMovie] = useState([]);\n  const [params] = useSearchParams();\n  const query = params.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMovie = async () => {\n      const data = await fetchMovie(query);\n      setMovie(data.results);\n    }\n\n    getMovie();\n  }, [query])\n  \n  return (\n    <div>\n      <MovieInput />\n      <TrendingMovies movies={movies} />\n    </div>\n  )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\n\nconst fetchTrending = async () => {\n  const params = new URLSearchParams({\n    language: \"en-US\",\n    api_key: 'bc8bedeb0e6d632b70f1bff9aa069a85'\n  });\n  const { data } = await axios.get(`/3/trending/all/day?${params}`);\n  return data;\n}\n\nconst fetchMovie = async movie => {\n  const params = new URLSearchParams({\n    language: \"en-US\",\n    api_key: 'bc8bedeb0e6d632b70f1bff9aa069a85',\n    include_adult: false,\n    query: movie,\n    page: 1\n  });\n  const { data } = await axios.get(`/3/search/movie?${params}`);\n  return data;\n}\n\nconst fetchMovieDetails = async id => {\n  const params = new URLSearchParams({\n    language: \"en-US\",\n    api_key: 'bc8bedeb0e6d632b70f1bff9aa069a85',\n  });\n  const { data } = await axios.get(`/3/movie/${id}?${params}`);\n  return data;\n}\n\nconst fetchMovieCast = async id => {\n  const params = new URLSearchParams({\n    language: \"en-US\",\n    api_key: 'bc8bedeb0e6d632b70f1bff9aa069a85',\n  });\n  const { data } = await axios.get(`/3/movie/${id}/credits?${params}`);\n  return data;\n}\n\nconst fetchMovieReviews = async id => {\n  const params = new URLSearchParams({\n    language: \"en-US\",\n    api_key: 'bc8bedeb0e6d632b70f1bff9aa069a85',\n    page: 1\n  });\n  const { data } = await axios.get(`/3/movie/${id}/reviews?${params}`);\n  return data;\n}\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews\n};"],"names":["TrendingItem","_ref","movie","location","useLocation","_jsxs","Link","to","pathname","includes","concat","id","state","from","children","_jsx","src","poster_path","placeholder","width","alt","original_title","MoviesUl","styled","_templateObject","_taggedTemplateLiteral","TrendingMovies","movies","map","item","MovieInput","_useSearchParams","useSearchParams","setParams","_slicedToArray","onSubmit","evt","preventDefault","query","target","elements","value","name","type","_useState","useState","_useState2","setMovie","get","useEffect","getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovie","sent","results","stop","apply","arguments","axios","fetchTrending","params","_yield$axios$get","URLSearchParams","language","api_key","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","include_adult","page","_x","fetchMovieDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}